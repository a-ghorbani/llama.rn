name: Sync llama.cpp

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  # First job: Update submodule and run bootstrap (platform-agnostic)
  sync-submodule:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for submodules and branch operations
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check and update llama.cpp submodule
        run: |
          chmod +x scripts/sync-llama-cpp-submodule.sh
          ./scripts/sync-llama-cpp-submodule.sh

  # Second job: Build iOS frameworks on macOS
  build-ios:
    runs-on: macos-15
    needs: sync-submodule
    if: success()

    steps:
      - name: Checkout synced branch
        uses: actions/checkout@v4
        with:
          ref: auto/sync-llama.cpp-staging
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run bootstrap
        run: yarn bootstrap

      - name: Build iOS frameworks
        run: yarn build:ios-frameworks

  # Third job: Build Android libraries on Ubuntu
  build-android:
    runs-on: ubuntu-latest
    needs: sync-submodule
    if: success()

    steps:
      - name: Checkout synced branch
        uses: actions/checkout@v4
        with:
          ref: auto/sync-llama.cpp-staging
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Setup JDK 17 for Android builds
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run bootstrap
        run: yarn bootstrap

      - name: Build Android libraries
        run: yarn build:android-libs

  # Fourth job: Finalize sync if both builds succeed
  finalize-sync:
    runs-on: ubuntu-latest
    needs: [build-ios, build-android]
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Finalize sync
        run: |
          chmod +x scripts/finalize-sync.sh
          ./scripts/finalize-sync.sh

  # Create PR after successful builds
  create-pr:
    runs-on: ubuntu-latest
    needs: finalize-sync
    if: success()

    steps:
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: auto/sync-llama.cpp
          title: "chore: sync llama.cpp to latest release"
          body: |
            ü§ñ **Automated llama.cpp sync**

            This PR was automatically created by the daily sync workflow.

            **Changes:**
            - Updated llama.cpp submodule to latest release
            - Regenerated bindings and build files

            **Verification:**
            - ‚úÖ Bootstrap script completed successfully
            - ‚úÖ iOS frameworks build completed successfully
            - ‚úÖ Android libraries build completed successfully
            - ‚úÖ TypeScript build completed successfully

            Please review and merge if all checks pass.
          draft: false
          delete-branch: false

  # Cleanup job if any step fails
  cleanup-on-failure:
    runs-on: ubuntu-latest
    needs: [sync-submodule, build-ios, build-android, finalize-sync]
    if: failure()

    steps:
      - name: Notify on sync failure
        run: |
          echo "‚ùå Sync failed. Check the workflow logs for details."
          echo "The persistent sync branch was not updated due to build failure."
